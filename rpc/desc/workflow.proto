syntax = "proto3";

import "k8s.io/apimachinery@v0.28.4/pkg/apis/meta/v1/generated.proto";
import "github.com/kubeTasker/kubeTasker@v0.0.2/pkg/apis/workflow/v1alpha1/generated.proto";
import "k8s.io/api@v0.28.4/core/v1/generated.proto";

message WorkflowCreateRequest {
    string namespace = 1;
    github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1.Workflow workflow = 2;
    string instanceID = 3;
    bool serverDryRun = 4;
    k8s.io.apimachinery.pkg.apis.meta.v1.CreateOptions createOptions = 5;
}
message WorkflowGetRequest {
    string name = 1;
    string namespace = 2;
    k8s.io.apimachinery.pkg.apis.meta.v1.GetOptions getOptions = 3;
}

message WorkflowListRequest {
    string namespace = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 2;
}

message WorkflowResubmitRequest {
    string name = 1;
    string namespace = 2;
    bool memoized = 3;
}

message WorkflowRetryRequest {
    string name = 1;
    string namespace = 2;
}
message WorkflowResumeRequest {
    string name = 1;
    string namespace = 2;
}

message WorkflowTerminateRequest {
    string name = 1;
    string namespace = 2;
}

message WorkflowSuspendRequest {
    string name = 1;
    string namespace = 2;
}

message WorkflowLogRequest {
    string name = 1;
    string namespace = 2;
    string podName = 3;
    k8s.io.api.core.v1.PodLogOptions logOptions = 4;
}

message WorkflowDeleteRequest {
    string name = 1;
    string namespace = 2;
    k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions deleteOptions = 3;
}

message WorkflowDeleteResponse {
}

message WatchWorkflowsRequest {
    string namespace = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 2;
}

message WorkflowWatchEvent {
        // the type of change
    string type = 1;
        // the workflow
    github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1.Workflow object = 2;
}

message LogEntry {
    string content = 1;
}

message WorkflowLintRequest {
    string namespace = 1;
    github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1.Workflow workflow = 2;
}
message WorkflowRespond {
    github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1.Workflow workflow=1;
}

message WorkflowListRespnd {
    github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1.WorkflowList workflowList=1;
}

service Core {
    // Workflow management
    // group: workflow
    rpc CreateWorkflow (WorkflowCreateRequest) returns (WorkflowRespond);
    // group: workflow
    rpc GetWorkflow (WorkflowGetRequest) returns (WorkflowRespond);
    // group: workflow
    rpc ListWorkflows (WorkflowListRequest) returns (WorkflowListRespnd);
    // group: workflow
    rpc WatchWorkflows (WatchWorkflowsRequest) returns (stream WorkflowWatchEvent);
    // group: workflow
    rpc DeleteWorkflow (WorkflowDeleteRequest) returns (WorkflowDeleteResponse);
    // group: workflow
    rpc RetryWorkflow (WorkflowRetryRequest) returns (WorkflowRespond);
    // group: workflow
    rpc ResubmitWorkflow (WorkflowResubmitRequest) returns (WorkflowRespond);
    // group: workflow
    rpc ResumeWorkflow (WorkflowResumeRequest) returns (WorkflowRespond);
    // group: workflow
    rpc SuspendWorkflow (WorkflowSuspendRequest) returns (WorkflowRespond);
    // group: workflow
    rpc TerminateWorkflow (WorkflowTerminateRequest) returns (WorkflowRespond);
    // group: workflow
    rpc LintWorkflow (WorkflowLintRequest) returns (WorkflowRespond);
    // group: workflow
    rpc PodLogs (WorkflowLogRequest) returns (stream LogEntry);
}