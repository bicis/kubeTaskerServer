syntax = "proto3";

import "k8s.io/api@v0.28.4/apps/v1/generated.proto";

// getDeployments
message GetDeploymentsReq {
  string filter_name = 1;
  string namespace = 2;
  int64 limit = 3;
  int64 page = 4;
}
message GetDeploymentsResp{
  repeated k8s.io.api.apps.v1.Deployment items = 1;
  int64 total = 2;
}

// getDeploymentDetail
message GetDeploymentDetailReq {
  string deployment_name = 1;
  string namespace = 2;
}
message GetDeploymentDetailResp {
  k8s.io.api.apps.v1.Deployment items = 1;
}

// scaleDeployment
message ScaleDeploymentReq {
  string deployment_name = 1;
  string namespace = 2;
}
message ScaleDeploymentResp {
  int64 replica = 1;
}

// createDeployment
message CreateDeploymentReq {
  string name = 1;
  string namespace = 2;
  int64 replicas = 3;
  string image = 4;
  map<string,string> label = 5;
  string cpu = 6;
  string memory = 7;
  string container_port = 8;
  bool health_check = 9;
  string health_path = 10;
}
message CreateDeploymentResp {

}

// deleteDeployment
message DeleteDeploymentReq {
  string deployment_name = 1;
  string namespace = 2;
}
message DeleteDeploymentResp {

}

// restartDeployment
message RestartDeploymentReq {
  string deployment_name = 1;
  string namespace = 2;
}
message RestartDeploymentResp {

}

// updateDeployment
message UpdateDeploymentReq {
  string namespace = 1;
  string content = 2;
}
message UpdateDeploymentResp {

}

// getDeployNumPerNp
message GetDeployNumPerNpReq {

}
message GetDeployNumPerNpResp {
  string namespace = 1;
  int64 deploy_num = 2;
}

service Core {
  // K8sDeployment management
  // group: k8sdeployment
  rpc getDeployments (GetDeploymentsReq) returns (GetDeploymentsResp);
  // group: k8sdeployment
  rpc getDeploymentDetail (GetDeploymentDetailReq) returns (GetDeploymentDetailResp);
  // group: k8sdeployment
  rpc scaleDeployment (ScaleDeploymentReq) returns (ScaleDeploymentResp);
  // group: k8sdeployment
  rpc createDeployment (CreateDeploymentReq) returns (CreateDeploymentResp);
  // group: k8sdeployment
  rpc deleteDeployment (DeleteDeploymentReq) returns (DeleteDeploymentResp);
  // group: k8sdeployment
  rpc restartDeployment (RestartDeploymentReq) returns (RestartDeploymentResp);
  // group: k8sdeployment
  rpc updateDeployment (UpdateDeploymentReq) returns (UpdateDeploymentResp);
  // group: k8sdeployment
  rpc getDeployNumPerNp (GetDeployNumPerNpReq) returns (GetDeployNumPerNpResp);
}